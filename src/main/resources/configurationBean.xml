<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

	<!-- Configure PostgreSQL datasource -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName"
			value="org.postgresql.Driver" />
		<property name="url"
			value="jdbc:postgresql://localhost:5432/test" />
		<property name="username" value="postgres" />
		<property name="password" value="Hegde" />
		<!-- Other properties like maxTotal, maxIdle, etc. can be configured here -->
	</bean>

	<!-- Configure JdbcTemplate -->
	<!-- This is constructor injection detailed way. <bean id="jdbcTemplate" 
		class="org.springframework.jdbc.core.JdbcTemplate"> <constructor-arg ref="dataSource"/> 
		</bean> -->


	<!-- There is another way to do auto-wire the object constructor injection -->
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate"
		autowire="constructor" />



	<!-- Lets Create EmployeeSalayDaoImpl bean and give above created jdbc template 
		to component -->
	<!-- This is setter injection Setter should be present in Dao class <bean 
		id="employeeSalaryDao" class="com.example.SpringFrameWorkXmlBasedConfiguration.EmployeeSalaryDaoImpl"> 
		<property name="jdbcTemplate" ref="jdbcTemplate" /> </bean> -->

	<!-- Easy way to do this is like below id of required bean(jdbcTemplate) 
		and field name in Dao class should be same -->
	<bean id="empSalaryDao"
		class="com.example.SpringFrameWorkXmlBasedConfiguration.EmployeeSalaryDaoImpl"
		autowire="byName" />

	<!-- <bean id="employeeSalaryService" class="com.example.SpringFrameWorkXmlBasedConfiguration.EmployeeSalaryServiceImpl" 
		name = "empSalaryService"> <property name="empSalaryDao" ref="employeeSalaryDao"/> 
		</bean> -->
	<bean id="employeeSalaryService"
		class="com.example.SpringFrameWorkXmlBasedConfiguration.EmployeeSalaryServiceImpl"
		autowire="byName" name="empSalaryService" />


	<!-- Note : Construction auto-wiring uses byName strategy. Setter injection 
		uses byType strategy. -->

</beans>
